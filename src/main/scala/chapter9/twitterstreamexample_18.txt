import java.util.Date
import org.apache.spark._
import org.apache.spark.streaming._
import org.apache.spark.streaming.twitter._
import twitter4j.auth.OAuthAuthorization
import twitter4j.conf.ConfigurationBuilder

// 독자의 트위터 계정과 관련된 다음 4개의 설정으로 변경한다
System.setProperty("twitter4j.oauth.consumerKey", "8wVysSpBc0LGzbwKMRh8hldSm") 
System.setProperty("twitter4j.oauth.consumerSecret", "FpV5MUDWliR6sInqIYIdkKMQEKaAUHdGJkEb4MVhDkh7dXtXPZ") 
System.setProperty("twitter4j.oauth.accessToken", "817207925756358656-yR0JR92VBdA2rBbgJaF7PYREbiV8VZq") 
System.setProperty("twitter4j.oauth.accessTokenSecret", "JsiVkUItwWCGyOLQEtnRpEhbXyZS9jNSzcMtycn68aBaS")

val ssc = new StreamingContext(sc, Seconds(5))

val twitterStream = TwitterUtils.createStream(ssc, None)

val aggStream = twitterStream.flatMap(x => x.getText.split(" ")).filter(_.startsWith("#")).map(x => (x, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(15), Seconds(10), 5)

ssc.checkpoint("checkpoints")

aggStream.checkpoint(Seconds(10))

aggStream.foreachRDD((rdd, time) => {
 val count = rdd.count()
 if (count > 0) {
 val dt = new Date(time.milliseconds)
 println(s"\n\n$dt rddCount = $count\nTop 5 words\n")
 val top5 = rdd.sortBy(_._2, ascending = false).take(5)
 top5.foreach {
	case (word, count) => println(s"[$word] - $count")
 }
 }
 })

ssc.start()

// 30초를 기다린다

ssc.stop(false)
